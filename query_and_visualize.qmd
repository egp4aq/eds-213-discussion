---
title: "Querying and Visualizing from the lego database"
format: html
author: "Liz Peterson"
date: "5-15-2025"
editor_options: 
  chunk_output_type: console
---

### Read in libraries
```{r}
library(tidyverse)
library(DBI)
library(dbplyr)
library(duckdb)
library(here)
library(dplyr)
library(ggplot2)
```

### Create 
```{r}
# Create connection
conn <- DBI::dbConnect(duckdb::duckdb(), dbdir = here("lego.db"))

# List out tables in database
DBI::dbListTables(conn)
```

I set out with my query and visualization to look at how themes have changed over time. Specifically, I wanted to see if sets with what I would call sensitive themes have declined over time.

```{r}
query <- dbGetQuery(conn, "SELECT sets.year, themes.name AS theme_name,
COUNT(sets.set_num) AS num_sets FROM sets 
JOIN themes ON sets.theme_id = themes.id
GROUP BY sets.year, themes.name
ORDER BY sets.year ASC, num_sets DESC;")
```

```{r}
# Look at how the police theme has changed over time 
police_trend <- query %>%
  filter(theme_name == "Police") %>%
  arrange(year)
```

Okay, we have our query, now let's visualize it. 
```{r}
ggplot(police_trend, aes(x = year, y = num_sets)) +
  geom_line(color = "blue", size = 1.2) +
  labs(
    title = "Number of Police Theme Sets Released Over Time",
    x = "Year",
    y = "Number of Sets"
  ) +
  theme_minimal()
```

## --> Once we've visualized, it seems like it might just be this increasing trend because there is more sets now than before. The more I think about it.. this might not be interesting. Okay new thinking: pink is my favorite color! let me see which of these themes have the most pink. Here's our query:

```{r}
pink <- dbGetQuery(conn, "SELECT 
  themes.name AS theme_name,
  SUM(inventory_parts.quantity) AS pink_part_count
FROM inventory_parts
JOIN inventories ON inventory_parts.inventory_id = inventories.id
JOIN sets ON inventories.set_num = sets.set_num
JOIN themes ON sets.theme_id = themes.id
JOIN colors ON inventory_parts.color_id = colors.id
WHERE 
  LOWER(colors.name) IN ('pink','dark pink','chrome pink','bright pink','light pink','glitter trans-dark pink')
GROUP BY 
  themes.name
ORDER BY 
  pink_part_count DESC;")
```

Okay, now let's visualize it: 

```{r}
top_pink <- head(pink, 10)
ggplot(top_pink, aes(x = "", y = pink_part_count, fill = theme_name)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  labs(title = "What themes have the most pink??") +
  theme_void() +
  scale_fill_brewer(palette = "Pastel1") +
  theme(plot.background = element_rect(fill = 'pink'))
  

```

